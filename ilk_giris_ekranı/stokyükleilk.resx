<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1_stokyükle.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2MvrH3DoJV31JSfwAAAAAElFTkSuQmCC
</value>
  </data>
</root>